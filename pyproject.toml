[tool.poetry]
name = "minimal-example"
version = "0.1.0"
description = ""
authors = ["afuetterer <fuetterh@posteo.de>"]
readme = "README.md"
packages = [{include = "hello_world.py"}]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
python-semantic-release = { version = "==8.0.0-alpha.4", allow-prereleases = true}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
commit_message = "chore: release {version}\n\n[skip ci]"
commit_parser = "angular"
major_on_zero = false
tag_format = "{version}"
version_toml = ["pyproject.toml:tool.poetry.version"]
build_command = "poetry build"

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.changelog]
# template_dir = "templates"
# changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "chore"
]

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

# [tool.semantic_release.remote.token]
# env = "GH_TOKEN"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.upload]
upload_to_vcs_release = true
upload_to_repository = false
